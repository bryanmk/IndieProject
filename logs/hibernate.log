[DEBUG] 2023-02-12 08:50:19.740 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-02-12 08:50:19.745 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2023-02-12 08:50:19.752 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2023-02-12 08:50:19.866 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2023-02-12 08:50:19.876 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2023-02-12 08:50:20.237 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2023-02-12 08:50:20.837 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2023-02-12 08:50:20.897 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-02-12 08:50:20.897 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2023-02-12 08:50:20.924 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2023-02-12 08:50:20.954 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3724b43e
[DEBUG] 2023-02-12 08:50:20.954 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3724b43e
[DEBUG] 2023-02-12 08:50:20.954 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3724b43e
[DEBUG] 2023-02-12 08:50:20.955 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@238bfd6c
[DEBUG] 2023-02-12 08:50:20.955 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7487b142
[DEBUG] 2023-02-12 08:50:20.956 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@27b45ea
[DEBUG] 2023-02-12 08:50:20.962 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4e1ce44
[DEBUG] 2023-02-12 08:50:20.962 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4e1ce44
[DEBUG] 2023-02-12 08:50:20.962 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e1ce44
[DEBUG] 2023-02-12 08:50:20.963 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7173ae5b
[DEBUG] 2023-02-12 08:50:20.963 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7173ae5b
[DEBUG] 2023-02-12 08:50:20.967 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7173ae5b
[DEBUG] 2023-02-12 08:50:20.968 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@bfc14b9
[DEBUG] 2023-02-12 08:50:20.968 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@bfc14b9
[DEBUG] 2023-02-12 08:50:20.968 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@bfc14b9
[DEBUG] 2023-02-12 08:50:20.969 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@43d38654
[DEBUG] 2023-02-12 08:50:20.970 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@43d38654
[DEBUG] 2023-02-12 08:50:20.972 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43d38654
[DEBUG] 2023-02-12 08:50:20.972 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4fc142ec
[DEBUG] 2023-02-12 08:50:20.972 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4fc142ec
[DEBUG] 2023-02-12 08:50:20.973 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fc142ec
[DEBUG] 2023-02-12 08:50:20.973 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd7796b
[DEBUG] 2023-02-12 08:50:20.973 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dd7796b
[DEBUG] 2023-02-12 08:50:20.973 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1dd7796b
[DEBUG] 2023-02-12 08:50:20.974 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@396639b
[DEBUG] 2023-02-12 08:50:20.974 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@396639b
[DEBUG] 2023-02-12 08:50:20.982 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@396639b
[DEBUG] 2023-02-12 08:50:20.987 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10f19647
[DEBUG] 2023-02-12 08:50:20.988 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10f19647
[DEBUG] 2023-02-12 08:50:20.989 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@42714a7
[DEBUG] 2023-02-12 08:50:20.989 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@42714a7
[DEBUG] 2023-02-12 08:50:20.990 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@59d77850
[DEBUG] 2023-02-12 08:50:20.990 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@59d77850
[DEBUG] 2023-02-12 08:50:20.991 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fd8c559
[DEBUG] 2023-02-12 08:50:20.991 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@55a88417
[DEBUG] 2023-02-12 08:50:20.991 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c8f9c2e
[DEBUG] 2023-02-12 08:50:20.992 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c8f9c2e
[DEBUG] 2023-02-12 08:50:20.992 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3dd818e8
[DEBUG] 2023-02-12 08:50:20.992 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3dd818e8
[DEBUG] 2023-02-12 08:50:21.013 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@15dc339f
[DEBUG] 2023-02-12 08:50:21.014 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@15dc339f
[DEBUG] 2023-02-12 08:50:21.015 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@76889e60
[DEBUG] 2023-02-12 08:50:21.015 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@76889e60
[DEBUG] 2023-02-12 08:50:21.016 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3e104d4b
[DEBUG] 2023-02-12 08:50:21.016 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3e104d4b
[DEBUG] 2023-02-12 08:50:21.017 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@64469d8
[DEBUG] 2023-02-12 08:50:21.017 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@64469d8
[DEBUG] 2023-02-12 08:50:21.018 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@43e1692f
[DEBUG] 2023-02-12 08:50:21.018 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@43e1692f
[DEBUG] 2023-02-12 08:50:21.019 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@66213a0d
[DEBUG] 2023-02-12 08:50:21.019 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@66213a0d
[DEBUG] 2023-02-12 08:50:21.020 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49206065
[DEBUG] 2023-02-12 08:50:21.020 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49206065
[DEBUG] 2023-02-12 08:50:21.020 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4743a322
[DEBUG] 2023-02-12 08:50:21.020 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4743a322
[DEBUG] 2023-02-12 08:50:21.021 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6fc29daa
[DEBUG] 2023-02-12 08:50:21.021 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6fc29daa
[DEBUG] 2023-02-12 08:50:21.022 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@10358c32
[DEBUG] 2023-02-12 08:50:21.022 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10358c32
[DEBUG] 2023-02-12 08:50:21.022 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10358c32
[DEBUG] 2023-02-12 08:50:21.023 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2a2843ec
[DEBUG] 2023-02-12 08:50:21.024 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@28737371
[DEBUG] 2023-02-12 08:50:21.024 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28737371
[DEBUG] 2023-02-12 08:50:21.024 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28737371
[DEBUG] 2023-02-12 08:50:21.024 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@bbf9e07
[DEBUG] 2023-02-12 08:50:21.025 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@18460128
[DEBUG] 2023-02-12 08:50:21.025 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@18460128
[DEBUG] 2023-02-12 08:50:21.025 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@43a0a32d
[DEBUG] 2023-02-12 08:50:21.025 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@43a0a32d
[DEBUG] 2023-02-12 08:50:21.026 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1866da85
[DEBUG] 2023-02-12 08:50:21.026 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1866da85
[DEBUG] 2023-02-12 08:50:21.032 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1f3165e7
[DEBUG] 2023-02-12 08:50:21.032 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f3165e7
[DEBUG] 2023-02-12 08:50:21.032 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45c2e0a6
[DEBUG] 2023-02-12 08:50:21.032 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45c2e0a6
[DEBUG] 2023-02-12 08:50:21.033 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@690bc15e
[DEBUG] 2023-02-12 08:50:21.036 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6ec7bce0
[DEBUG] 2023-02-12 08:50:21.036 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ec7bce0
[DEBUG] 2023-02-12 08:50:21.039 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6ec7bce0
[DEBUG] 2023-02-12 08:50:21.040 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b69761b
[DEBUG] 2023-02-12 08:50:21.040 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b69761b
[DEBUG] 2023-02-12 08:50:21.041 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b69761b
[DEBUG] 2023-02-12 08:50:21.042 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e47a03
[DEBUG] 2023-02-12 08:50:21.042 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d425813
[DEBUG] 2023-02-12 08:50:21.042 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@e042c99
[DEBUG] 2023-02-12 08:50:21.042 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@e042c99
[DEBUG] 2023-02-12 08:50:21.043 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@e042c99
[DEBUG] 2023-02-12 08:50:21.043 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@63b3ee82
[DEBUG] 2023-02-12 08:50:21.043 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@63b3ee82
[DEBUG] 2023-02-12 08:50:21.043 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@63b3ee82
[DEBUG] 2023-02-12 08:50:21.043 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@a0db585
[DEBUG] 2023-02-12 08:50:21.044 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1894593a
[DEBUG] 2023-02-12 08:50:21.044 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1729ec00
[DEBUG] 2023-02-12 08:50:21.044 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1729ec00
[DEBUG] 2023-02-12 08:50:21.045 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b10ace9
[DEBUG] 2023-02-12 08:50:21.045 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@716e431d
[DEBUG] 2023-02-12 08:50:21.045 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@716e431d
[DEBUG] 2023-02-12 08:50:21.046 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5f7da3d3
[DEBUG] 2023-02-12 08:50:21.046 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f7da3d3
[DEBUG] 2023-02-12 08:50:21.046 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@64fe9da7
[DEBUG] 2023-02-12 08:50:21.047 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67efd2c2
[DEBUG] 2023-02-12 08:50:21.048 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@665522c2
[DEBUG] 2023-02-12 08:50:21.051 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5a2fa51f
[DEBUG] 2023-02-12 08:50:21.051 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a2fa51f
[DEBUG] 2023-02-12 08:50:21.052 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ecdbab8
[DEBUG] 2023-02-12 08:50:21.053 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3dd4a6fa
[DEBUG] 2023-02-12 08:50:21.053 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19f7222e
[DEBUG] 2023-02-12 08:50:21.053 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3f725306
[DEBUG] 2023-02-12 08:50:21.053 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3c69362a
[DEBUG] 2023-02-12 08:50:21.053 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2412a42b
[DEBUG] 2023-02-12 08:50:21.054 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45404d5
[DEBUG] 2023-02-12 08:50:21.054 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29138d3a
[DEBUG] 2023-02-12 08:50:21.089 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-02-12 08:50:21.089 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-02-12 08:50:21.090 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-02-12 08:50:21.090 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-02-12 08:50:21.091 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-02-12 08:50:21.092 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-02-12 08:50:21.093 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-02-12 08:50:21.095 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-02-12 08:50:21.096 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2023-02-12 08:50:21.096 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-02-12 08:50:21.096 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-02-12 08:50:21.097 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2023-02-12 08:50:21.097 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-02-12 08:50:21.098 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2023-02-12 08:50:21.108 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/questie_test
[INFO ] 2023-02-12 08:50:21.108 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2023-02-12 08:50:21.109 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2023-02-12 08:50:21.341 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2023-02-12 08:50:21.517 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2023-02-12 08:50:21.525 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2023-02-12 08:50:21.526 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2023-02-12 08:50:21.581 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2023-02-12 08:50:21.600 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-02-12 08:50:21.678 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-02-12 08:50:21.779 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-02-12 08:50:21.795 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67507df] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@341b13a8]
[DEBUG] 2023-02-12 08:50:21.891 [main] AnnotationBinder - Binding entity from annotated class: questie.entity.User
[DEBUG] 2023-02-12 08:50:21.950 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2023-02-12 08:50:21.964 [main] EntityBinder - Import with entity name User
[DEBUG] 2023-02-12 08:50:21.975 [main] EntityBinder - Bind entity questie.entity.User on table User
[DEBUG] 2023-02-12 08:50:22.042 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.046 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-02-12 08:50:22.047 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.User:id]
[DEBUG] 2023-02-12 08:50:22.048 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2023-02-12 08:50:22.069 [main] PropertyBinder - Building property id
[DEBUG] 2023-02-12 08:50:22.071 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2023-02-12 08:50:22.072 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.092 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2023-02-12 08:50:22.108 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.User:firstName]
[DEBUG] 2023-02-12 08:50:22.109 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2023-02-12 08:50:22.109 [main] PropertyBinder - Building property firstName
[DEBUG] 2023-02-12 08:50:22.109 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=gamertag, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.109 [main] PropertyBinder - MetadataSourceProcessor property gamertag with lazy=false
[DEBUG] 2023-02-12 08:50:22.109 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.User:gamertag]
[DEBUG] 2023-02-12 08:50:22.110 [main] SimpleValueBinder - building SimpleValue for gamertag
[DEBUG] 2023-02-12 08:50:22.110 [main] PropertyBinder - Building property gamertag
[DEBUG] 2023-02-12 08:50:22.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(User), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.110 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2023-02-12 08:50:22.110 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.User:lastName]
[DEBUG] 2023-02-12 08:50:22.110 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2023-02-12 08:50:22.110 [main] PropertyBinder - Building property lastName
[DEBUG] 2023-02-12 08:50:22.111 [main] AnnotationBinder - Binding entity from annotated class: questie.entity.Quest
[DEBUG] 2023-02-12 08:50:22.112 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2023-02-12 08:50:22.112 [main] EntityBinder - Import with entity name Quest
[DEBUG] 2023-02-12 08:50:22.112 [main] EntityBinder - Bind entity questie.entity.Quest on table Quest
[DEBUG] 2023-02-12 08:50:22.115 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Quest), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.116 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-02-12 08:50:22.116 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.Quest:id]
[DEBUG] 2023-02-12 08:50:22.116 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2023-02-12 08:50:22.116 [main] PropertyBinder - Building property id
[DEBUG] 2023-02-12 08:50:22.116 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2023-02-12 08:50:22.116 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Quest), mappingColumn=quest_area, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.117 [main] PropertyBinder - MetadataSourceProcessor property questArea with lazy=false
[DEBUG] 2023-02-12 08:50:22.117 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.Quest:questArea]
[DEBUG] 2023-02-12 08:50:22.119 [main] SimpleValueBinder - building SimpleValue for questArea
[DEBUG] 2023-02-12 08:50:22.119 [main] PropertyBinder - Building property questArea
[DEBUG] 2023-02-12 08:50:22.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Quest), mappingColumn=quest_level_requirement, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.119 [main] PropertyBinder - MetadataSourceProcessor property questLevelRequirement with lazy=false
[DEBUG] 2023-02-12 08:50:22.119 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.Quest:questLevelRequirement]
[DEBUG] 2023-02-12 08:50:22.119 [main] SimpleValueBinder - building SimpleValue for questLevelRequirement
[DEBUG] 2023-02-12 08:50:22.119 [main] PropertyBinder - Building property questLevelRequirement
[DEBUG] 2023-02-12 08:50:22.119 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Quest), mappingColumn=quest_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.119 [main] PropertyBinder - MetadataSourceProcessor property questName with lazy=false
[DEBUG] 2023-02-12 08:50:22.119 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.Quest:questName]
[DEBUG] 2023-02-12 08:50:22.119 [main] SimpleValueBinder - building SimpleValue for questName
[DEBUG] 2023-02-12 08:50:22.119 [main] PropertyBinder - Building property questName
[DEBUG] 2023-02-12 08:50:22.120 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Quest), mappingColumn=quest_reward, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.120 [main] PropertyBinder - MetadataSourceProcessor property questReward with lazy=false
[DEBUG] 2023-02-12 08:50:22.120 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.Quest:questReward]
[DEBUG] 2023-02-12 08:50:22.120 [main] SimpleValueBinder - building SimpleValue for questReward
[DEBUG] 2023-02-12 08:50:22.120 [main] PropertyBinder - Building property questReward
[DEBUG] 2023-02-12 08:50:22.120 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Quest), mappingColumn=quest_xp, insertable=true, updatable=true, unique=false}
[DEBUG] 2023-02-12 08:50:22.120 [main] PropertyBinder - MetadataSourceProcessor property questXP with lazy=false
[DEBUG] 2023-02-12 08:50:22.120 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [questie.entity.Quest:questXP]
[DEBUG] 2023-02-12 08:50:22.120 [main] SimpleValueBinder - building SimpleValue for questXP
[DEBUG] 2023-02-12 08:50:22.120 [main] PropertyBinder - Building property questXP
[DEBUG] 2023-02-12 08:50:22.121 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2023-02-12 08:50:22.121 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2023-02-12 08:50:22.121 [main] SimpleValueBinder - Starting fillSimpleValue for gamertag
[DEBUG] 2023-02-12 08:50:22.121 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2023-02-12 08:50:22.121 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2023-02-12 08:50:22.132 [main] SimpleValueBinder - Starting fillSimpleValue for questArea
[DEBUG] 2023-02-12 08:50:22.133 [main] SimpleValueBinder - Starting fillSimpleValue for questLevelRequirement
[DEBUG] 2023-02-12 08:50:22.133 [main] SimpleValueBinder - Starting fillSimpleValue for questName
[DEBUG] 2023-02-12 08:50:22.133 [main] SimpleValueBinder - Starting fillSimpleValue for questReward
[DEBUG] 2023-02-12 08:50:22.133 [main] SimpleValueBinder - Starting fillSimpleValue for questXP
[DEBUG] 2023-02-12 08:50:22.134 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2023-02-12 08:50:22.134 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [quest]
[DEBUG] 2023-02-12 08:50:22.228 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2023-02-12 08:50:22.235 [main] Settings - SessionFactory name : null
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Statistics: disabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Default entity-mode: pojo
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Default batch fetch size: -1
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Default null ordering: NONE
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2023-02-12 08:50:22.236 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2023-02-12 08:50:22.237 [main] Settings - Query language substitutions: {}
[DEBUG] 2023-02-12 08:50:22.237 [main] Settings - Named query checking : enabled
[DEBUG] 2023-02-12 08:50:22.244 [main] Settings - Second-level cache: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Second-level query cache: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Second-level query cache factory: null
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JDBC batch size: 15
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Wrap result sets: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JPA compliance - query : 
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2023-02-12 08:50:22.245 [main] Settings - JPA compliance - lists : 
[DEBUG] 2023-02-12 08:50:22.246 [main] Settings - JPA compliance - transactions : 
[INFO ] 2023-02-12 08:50:22.568 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2023-02-12 08:50:22.620 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2023-02-12 08:50:22.621 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/WoWQuestHelper/target/test-classes:/home/student/IdeaProjects/WoWQuestHelper/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.1/log4j-api-2.17.1.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.17.1/log4j-core-2.17.1.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, coverage.ignore.private.constructor.util.class=true, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 questie.persistence.UserDAOTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, idea.new.sampling.coverage=true, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.17+8-post-Ubuntu-1ubuntu220.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-137-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/questie_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.17, user.dir=/home/student/IdeaProjects/WoWQuestHelper, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2001e48c, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.17+8-post-Ubuntu-1ubuntu220.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/questie_test, java.class.version=55.0}
[DEBUG] 2023-02-12 08:50:22.669 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2023-02-12 08:50:22.669 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2023-02-12 08:50:22.699 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2023-02-12 08:50:22.700 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67507df] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@66fbc5e7]
[DEBUG] 2023-02-12 08:50:22.788 [main] ClassLoaderAccessImpl - Not known whether passed class name [questie.entity.Quest] is safe
[DEBUG] 2023-02-12 08:50:22.788 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : questie.entity.Quest
[DEBUG] 2023-02-12 08:50:22.818 [main] ClassLoaderAccessImpl - Not known whether passed class name [questie.entity.Quest] is safe
[DEBUG] 2023-02-12 08:50:22.818 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : questie.entity.Quest
[DEBUG] 2023-02-12 08:50:23.249 [main] ClassLoaderAccessImpl - Not known whether passed class name [questie.entity.User] is safe
[DEBUG] 2023-02-12 08:50:23.249 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : questie.entity.User
[DEBUG] 2023-02-12 08:50:23.249 [main] ClassLoaderAccessImpl - Not known whether passed class name [questie.entity.User] is safe
[DEBUG] 2023-02-12 08:50:23.249 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : questie.entity.User
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister - Static SQL for entity: questie.entity.Quest
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister -  Version select: select id from Quest where id =?
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister -  Snapshot select: select quest_.id, quest_.quest_area as quest_ar2_0_, quest_.quest_level_requirement as quest_le3_0_, quest_.quest_name as quest_na4_0_, quest_.quest_reward as quest_re5_0_, quest_.quest_xp as quest_xp6_0_ from Quest quest_ where quest_.id=?
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister -  Insert 0: insert into Quest (quest_area, quest_level_requirement, quest_name, quest_reward, quest_xp, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister -  Update 0: update Quest set quest_area=?, quest_level_requirement=?, quest_name=?, quest_reward=?, quest_xp=? where id=?
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister -  Delete 0: delete from Quest where id=?
[DEBUG] 2023-02-12 08:50:23.272 [main] AbstractEntityPersister -  Identity insert: insert into Quest (quest_area, quest_level_requirement, quest_name, quest_reward, quest_xp) values (?, ?, ?, ?, ?)
[DEBUG] 2023-02-12 08:50:23.314 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8b5020]
[DEBUG] 2023-02-12 08:50:23.315 [main] MetamodelGraphWalker - Visiting attribute path : questArea
[DEBUG] 2023-02-12 08:50:23.315 [main] MetamodelGraphWalker - Visiting attribute path : questLevelRequirement
[DEBUG] 2023-02-12 08:50:23.315 [main] MetamodelGraphWalker - Visiting attribute path : questName
[DEBUG] 2023-02-12 08:50:23.315 [main] MetamodelGraphWalker - Visiting attribute path : questReward
[DEBUG] 2023-02-12 08:50:23.315 [main] MetamodelGraphWalker - Visiting attribute path : questXP
[DEBUG] 2023-02-12 08:50:23.315 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-02-12 08:50:23.330 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-02-12 08:50:23.333 [main] LoadPlanTreePrinter - LoadPlan(entity=questie.entity.Quest)
    - Returns
       - EntityReturnImpl(entity=questie.entity.Quest, querySpaceUid=<gen:0>, path=questie.entity.Quest)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=questie.entity.Quest)
          - SQL table alias mapping - quest0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2023-02-12 08:50:23.347 [main] EntityLoader - Static select for entity questie.entity.Quest [NONE]: select quest0_.id as id1_0_0_, quest0_.quest_area as quest_ar2_0_0_, quest0_.quest_level_requirement as quest_le3_0_0_, quest0_.quest_name as quest_na4_0_0_, quest0_.quest_reward as quest_re5_0_0_, quest0_.quest_xp as quest_xp6_0_0_ from Quest quest0_ where quest0_.id=?
[DEBUG] 2023-02-12 08:50:23.347 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cb6e0ee]
[DEBUG] 2023-02-12 08:50:23.347 [main] MetamodelGraphWalker - Visiting attribute path : questArea
[DEBUG] 2023-02-12 08:50:23.348 [main] MetamodelGraphWalker - Visiting attribute path : questLevelRequirement
[DEBUG] 2023-02-12 08:50:23.348 [main] MetamodelGraphWalker - Visiting attribute path : questName
[DEBUG] 2023-02-12 08:50:23.348 [main] MetamodelGraphWalker - Visiting attribute path : questReward
[DEBUG] 2023-02-12 08:50:23.348 [main] MetamodelGraphWalker - Visiting attribute path : questXP
[DEBUG] 2023-02-12 08:50:23.348 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-02-12 08:50:23.348 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-02-12 08:50:23.348 [main] LoadPlanTreePrinter - LoadPlan(entity=questie.entity.Quest)
    - Returns
       - EntityReturnImpl(entity=questie.entity.Quest, querySpaceUid=<gen:0>, path=questie.entity.Quest)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=questie.entity.Quest)
          - SQL table alias mapping - quest0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2023-02-12 08:50:23.348 [main] EntityLoader - Static select for entity questie.entity.Quest [READ]: select quest0_.id as id1_0_0_, quest0_.quest_area as quest_ar2_0_0_, quest0_.quest_level_requirement as quest_le3_0_0_, quest0_.quest_name as quest_na4_0_0_, quest0_.quest_reward as quest_re5_0_0_, quest0_.quest_xp as quest_xp6_0_0_ from Quest quest0_ where quest0_.id=?
[DEBUG] 2023-02-12 08:50:23.369 [main] Loader - Static select for action ACTION_MERGE on entity questie.entity.Quest: select quest0_.id as id1_0_0_, quest0_.quest_area as quest_ar2_0_0_, quest0_.quest_level_requirement as quest_le3_0_0_, quest0_.quest_name as quest_na4_0_0_, quest0_.quest_reward as quest_re5_0_0_, quest0_.quest_xp as quest_xp6_0_0_ from Quest quest0_ where quest0_.id=?
[DEBUG] 2023-02-12 08:50:23.382 [main] Loader - Static select for action ACTION_REFRESH on entity questie.entity.Quest: select quest0_.id as id1_0_0_, quest0_.quest_area as quest_ar2_0_0_, quest0_.quest_level_requirement as quest_le3_0_0_, quest0_.quest_name as quest_na4_0_0_, quest0_.quest_reward as quest_re5_0_0_, quest0_.quest_xp as quest_xp6_0_0_ from Quest quest0_ where quest0_.id=?
[DEBUG] 2023-02-12 08:50:23.382 [main] AbstractEntityPersister - Static SQL for entity: questie.entity.User
[DEBUG] 2023-02-12 08:50:23.382 [main] AbstractEntityPersister -  Version select: select id from User where id =?
[DEBUG] 2023-02-12 08:50:23.382 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.first_name as first_na2_1_, user_.gamertag as gamertag3_1_, user_.last_name as last_nam4_1_ from User user_ where user_.id=?
[DEBUG] 2023-02-12 08:50:23.382 [main] AbstractEntityPersister -  Insert 0: insert into User (first_name, gamertag, last_name, id) values (?, ?, ?, ?)
[DEBUG] 2023-02-12 08:50:23.383 [main] AbstractEntityPersister -  Update 0: update User set first_name=?, gamertag=?, last_name=? where id=?
[DEBUG] 2023-02-12 08:50:23.383 [main] AbstractEntityPersister -  Delete 0: delete from User where id=?
[DEBUG] 2023-02-12 08:50:23.383 [main] AbstractEntityPersister -  Identity insert: insert into User (first_name, gamertag, last_name) values (?, ?, ?)
[DEBUG] 2023-02-12 08:50:23.383 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6885ed19]
[DEBUG] 2023-02-12 08:50:23.383 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2023-02-12 08:50:23.383 [main] MetamodelGraphWalker - Visiting attribute path : gamertag
[DEBUG] 2023-02-12 08:50:23.383 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2023-02-12 08:50:23.383 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-02-12 08:50:23.383 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-02-12 08:50:23.384 [main] LoadPlanTreePrinter - LoadPlan(entity=questie.entity.User)
    - Returns
       - EntityReturnImpl(entity=questie.entity.User, querySpaceUid=<gen:0>, path=questie.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=questie.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2023-02-12 08:50:23.384 [main] EntityLoader - Static select for entity questie.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:23.384 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d4a3e13]
[DEBUG] 2023-02-12 08:50:23.384 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2023-02-12 08:50:23.384 [main] MetamodelGraphWalker - Visiting attribute path : gamertag
[DEBUG] 2023-02-12 08:50:23.384 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2023-02-12 08:50:23.384 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2023-02-12 08:50:23.384 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2023-02-12 08:50:23.384 [main] LoadPlanTreePrinter - LoadPlan(entity=questie.entity.User)
    - Returns
       - EntityReturnImpl(entity=questie.entity.User, querySpaceUid=<gen:0>, path=questie.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=questie.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

[DEBUG] 2023-02-12 08:50:23.384 [main] EntityLoader - Static select for entity questie.entity.User [READ]: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:23.385 [main] Loader - Static select for action ACTION_MERGE on entity questie.entity.User: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:23.385 [main] Loader - Static select for action ACTION_REFRESH on entity questie.entity.User: select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:23.422 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2023-02-12 08:50:23.422 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2023-02-12 08:50:23.423 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-02-12 08:50:23.430 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2023-02-12 08:50:23.431 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-02-12 08:50:23.436 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2023-02-12 08:50:23.436 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2023-02-12 08:50:23.438 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73e1ecd0
[DEBUG] 2023-02-12 08:50:23.440 [main] SessionFactoryRegistry - Registering SessionFactory: d300825b-590f-4b2c-81a5-a80269926f6f (<unnamed>)
[DEBUG] 2023-02-12 08:50:23.440 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-02-12 08:50:23.524 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2023-02-12 08:50:23.549 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:23.567 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-02-12 08:50:23.567 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:23.584 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:23.585 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:23.585 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:23.586 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : questie.entity.User#3
[DEBUG] 2023-02-12 08:50:23.586 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:23.599 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-02-12 08:50:23.599 [main] TransactionImpl - begin
[DEBUG] 2023-02-12 08:50:23.617 [main] TransactionImpl - committing
[DEBUG] 2023-02-12 08:50:23.618 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2023-02-12 08:50:23.618 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2023-02-12 08:50:23.618 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2023-02-12 08:50:23.619 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-02-12 08:50:23.619 [main] EntityPrinter - Listing entities:
[DEBUG] 2023-02-12 08:50:23.620 [main] EntityPrinter - questie.entity.User{gamertag=bcurry, firstName=Barney, lastName=Curry, id=3}
[DEBUG] 2023-02-12 08:50:23.623 [main] SQL - delete from User where id=?
[DEBUG] 2023-02-12 08:50:23.633 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:23.638 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:23.638 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2023-02-12 08:50:23.639 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:23.646 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:23.646 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : questie.entity.User#3
[DEBUG] 2023-02-12 08:50:23.646 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:23.798 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2023-02-12 08:50:23.813 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2cbe455c
[DEBUG] 2023-02-12 08:50:23.847 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from questie.entity.User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2023-02-12 08:50:23.855 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:23.868 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'questie'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2023-02-12 08:50:23.893 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:23.908 [main] FromElement - FromClause{level=1} : questie.entity.User (generatedAlias0) -> user0_
[DEBUG] 2023-02-12 08:50:23.909 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2023-02-12 08:50:23.927 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2023-02-12 08:50:23.929 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@59d77850
[DEBUG] 2023-02-12 08:50:23.931 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2023-02-12 08:50:23.933 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:23.934 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} User user0_ ) ( where ( = ( user0_.last_name user0_.id lastName ) ? ) ) )
[DEBUG] 2023-02-12 08:50:23.950 [main] JoinProcessor - Using FROM fragment [User user0_]
[DEBUG] 2023-02-12 08:50:23.950 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:23.951 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=questie.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=questie.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=questie.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=questie.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@59d77850}

[DEBUG] 2023-02-12 08:50:23.951 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:23.958 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from questie.entity.User as generatedAlias0 where generatedAlias0.lastName=:param0
[DEBUG] 2023-02-12 08:50:23.958 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_ where user0_.last_name=?
[DEBUG] 2023-02-12 08:50:23.958 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:23.973 [main] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_ where user0_.last_name=?
[DEBUG] 2023-02-12 08:50:23.985 [main] Loader - Result set row: 0
[DEBUG] 2023-02-12 08:50:23.985 [main] Loader - Result row: EntityKey[questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:23.985 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:23.985 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:23.986 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:23.986 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:23.986 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:23.986 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:23.992 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:23.992 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:23.993 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.074 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2023-02-12 08:50:24.074 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from questie.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2023-02-12 08:50:24.076 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:24.077 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'questie'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2023-02-12 08:50:24.078 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:24.078 [main] FromElement - FromClause{level=1} : questie.entity.User (generatedAlias0) -> user0_
[DEBUG] 2023-02-12 08:50:24.078 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2023-02-12 08:50:24.078 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2023-02-12 08:50:24.078 [main] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@59d77850
[DEBUG] 2023-02-12 08:50:24.078 [main] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2023-02-12 08:50:24.078 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:24.078 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} User user0_ ) ( where ( like ( user0_.last_name user0_.id lastName ) ? ) ) )
[DEBUG] 2023-02-12 08:50:24.078 [main] JoinProcessor - Using FROM fragment [User user0_]
[DEBUG] 2023-02-12 08:50:24.079 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:24.086 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=questie.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=questie.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=questie.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=questie.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@59d77850}

[DEBUG] 2023-02-12 08:50:24.086 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:24.086 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from questie.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2023-02-12 08:50:24.086 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_ where user0_.last_name like ?
[DEBUG] 2023-02-12 08:50:24.086 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:24.087 [main] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_ where user0_.last_name like ?
[DEBUG] 2023-02-12 08:50:24.090 [main] Loader - Result set row: 0
[DEBUG] 2023-02-12 08:50:24.091 [main] Loader - Result row: EntityKey[questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.091 [main] Loader - Result set row: 1
[DEBUG] 2023-02-12 08:50:24.091 [main] Loader - Result row: EntityKey[questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.091 [main] Loader - Result set row: 2
[DEBUG] 2023-02-12 08:50:24.091 [main] Loader - Result row: EntityKey[questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = jcoyne
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.091 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.092 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Karen
[DEBUG] 2023-02-12 08:50:24.102 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.105 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = kmack
[DEBUG] 2023-02-12 08:50:24.105 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.105 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Mack
[DEBUG] 2023-02-12 08:50:24.105 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.105 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.106 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.204 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:24.208 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-02-12 08:50:24.215 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.216 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.218 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:24.218 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : questie.entity.User#3
[DEBUG] 2023-02-12 08:50:24.218 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.273 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2023-02-12 08:50:24.274 [main] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_ where user0_.last_name like ?
[DEBUG] 2023-02-12 08:50:24.278 [main] Loader - Result set row: 0
[DEBUG] 2023-02-12 08:50:24.278 [main] Loader - Result row: EntityKey[questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.278 [main] Loader - Result set row: 1
[DEBUG] 2023-02-12 08:50:24.279 [main] Loader - Result row: EntityKey[questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.279 [main] Loader - Result set row: 2
[DEBUG] 2023-02-12 08:50:24.279 [main] Loader - Result row: EntityKey[questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = jcoyne
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.279 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Karen
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = kmack
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Mack
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.280 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.280 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.347 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:24.352 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-02-12 08:50:24.352 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-02-12 08:50:24.352 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.352 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:24.352 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.352 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:24.353 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.354 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:24.355 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.356 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.356 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:24.356 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : questie.entity.User#3
[DEBUG] 2023-02-12 08:50:24.356 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.369 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-02-12 08:50:24.369 [main] TransactionImpl - begin
[DEBUG] 2023-02-12 08:50:24.374 [main] TransactionImpl - committing
[DEBUG] 2023-02-12 08:50:24.374 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2023-02-12 08:50:24.375 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2023-02-12 08:50:24.375 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2023-02-12 08:50:24.375 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-02-12 08:50:24.375 [main] EntityPrinter - Listing entities:
[DEBUG] 2023-02-12 08:50:24.375 [main] EntityPrinter - questie.entity.User{gamertag=bcurry, firstName=Barney, lastName=Davis, id=3}
[DEBUG] 2023-02-12 08:50:24.376 [main] SQL - update User set first_name=?, gamertag=?, last_name=? where id=?
[DEBUG] 2023-02-12 08:50:24.390 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.402 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.403 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:24.406 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-02-12 08:50:24.406 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Davis
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.406 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.406 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:24.407 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : questie.entity.User#3
[DEBUG] 2023-02-12 08:50:24.407 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.501 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2023-02-12 08:50:24.504 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from questie.entity.User as generatedAlias0
[DEBUG] 2023-02-12 08:50:24.504 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:24.505 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[IDENT] Node: 'questie'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2023-02-12 08:50:24.505 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:24.507 [main] FromElement - FromClause{level=1} : questie.entity.User (generatedAlias0) -> user0_
[DEBUG] 2023-02-12 08:50:24.508 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2023-02-12 08:50:24.515 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:24.515 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} User user0_ ) )
[DEBUG] 2023-02-12 08:50:24.515 [main] JoinProcessor - Using FROM fragment [User user0_]
[DEBUG] 2023-02-12 08:50:24.515 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2023-02-12 08:50:24.516 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (User)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=questie.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'User user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=User,tableAlias=user0_,origin=null,columns={,className=questie.entity.User}}

[DEBUG] 2023-02-12 08:50:24.516 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:24.516 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from questie.entity.User as generatedAlias0
[DEBUG] 2023-02-12 08:50:24.516 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_
[DEBUG] 2023-02-12 08:50:24.516 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2023-02-12 08:50:24.517 [main] SQL - select user0_.id as id1_1_, user0_.first_name as first_na2_1_, user0_.gamertag as gamertag3_1_, user0_.last_name as last_nam4_1_ from User user0_
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result set row: 0
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result row: EntityKey[questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result set row: 1
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result row: EntityKey[questie.entity.User#2]
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result set row: 2
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result row: EntityKey[questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result set row: 3
[DEBUG] 2023-02-12 08:50:24.520 [main] Loader - Result row: EntityKey[questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.521 [main] Loader - Result set row: 4
[DEBUG] 2023-02-12 08:50:24.521 [main] Loader - Result row: EntityKey[questie.entity.User#5]
[DEBUG] 2023-02-12 08:50:24.526 [main] Loader - Result set row: 5
[DEBUG] 2023-02-12 08:50:24.526 [main] Loader - Result row: EntityKey[questie.entity.User#6]
[DEBUG] 2023-02-12 08:50:24.526 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = jcoyne
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#1]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#2]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = fhensen
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#2]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barney
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = bcurry
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Curry
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#3]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Karen
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = kmack
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.527 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Mack
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#4]
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#5]
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Dianne
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = dklein
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Klein
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#5]
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#6]
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Dawn
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = dtillman
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.528 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Tillman
[DEBUG] 2023-02-12 08:50:24.529 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.529 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#6]
[DEBUG] 2023-02-12 08:50:24.529 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.575 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-02-12 08:50:24.575 [main] TransactionImpl - begin
[DEBUG] 2023-02-12 08:50:24.616 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2023-02-12 08:50:24.616 [main] SQL - insert into User (first_name, gamertag, last_name) values (?, ?, ?)
[DEBUG] 2023-02-12 08:50:24.625 [main] IdentifierGeneratorHelper - Natively generated identity: 33
[DEBUG] 2023-02-12 08:50:24.625 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:24.628 [main] TransactionImpl - committing
[DEBUG] 2023-02-12 08:50:24.628 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2023-02-12 08:50:24.628 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2023-02-12 08:50:24.628 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2023-02-12 08:50:24.628 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-02-12 08:50:24.628 [main] EntityPrinter - Listing entities:
[DEBUG] 2023-02-12 08:50:24.628 [main] EntityPrinter - questie.entity.User{gamertag=fflintstone, firstName=Fred, lastName=Flintstone, id=33}
[DEBUG] 2023-02-12 08:50:24.631 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.647 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-02-12 08:50:24.649 [main] SQL - select user0_.id as id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.gamertag as gamertag3_1_0_, user0_.last_name as last_nam4_1_0_ from User user0_ where user0_.id=?
[DEBUG] 2023-02-12 08:50:24.650 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2023-02-12 08:50:24.650 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2023-02-12 08:50:24.653 [main] TwoPhaseLoad - Resolving attributes for [questie.entity.User#33]
[DEBUG] 2023-02-12 08:50:24.653 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2023-02-12 08:50:24.653 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.653 [main] TwoPhaseLoad - Processing attribute `gamertag` : value = fflintstone
[DEBUG] 2023-02-12 08:50:24.661 [main] TwoPhaseLoad - Attribute (`gamertag`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.661 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Flintstone
[DEBUG] 2023-02-12 08:50:24.661 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2023-02-12 08:50:24.661 [main] TwoPhaseLoad - Done materializing entity [questie.entity.User#33]
[DEBUG] 2023-02-12 08:50:24.661 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-02-12 08:50:24.661 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : questie.entity.User#33
[DEBUG] 2023-02-12 08:50:24.661 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
